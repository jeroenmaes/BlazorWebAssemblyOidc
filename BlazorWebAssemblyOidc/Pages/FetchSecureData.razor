@page "/fetchsecuredata"
@inject IHttpClientFactory Http
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
<h1>Fetch secure data</h1>

@*<p>This component demonstrates fetching data from the server.</p>*@

<p>User Claims:</p>
<Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
    @foreach (var item in context.User.Claims)
    {
        <p>@item.Value  @item.Type</p>
    }
</Microsoft.AspNetCore.Components.Authorization.AuthorizeView>

<p>UserInfo Endpoint response:</p>

@stringResponse

<p>Secure remote API call response:</p>

@stringResponse2


@code {
    string stringResponse;
    string stringResponse2;
    protected override async Task OnInitializedAsync()
    {
        var client = Http.CreateClient("secured-api");

        var response = await client.GetAsync("/realms/master/protocol/openid-connect/userinfo");
        stringResponse = await response.Content.ReadAsStringAsync();

        var response2 = await client.GetAsync("http://localhost:5128/test");
        stringResponse2 = await response2.Content.ReadAsStringAsync();
    }
}
